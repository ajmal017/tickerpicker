require 'digest/md5'

guppy1 = <<-EOT
EMAC3 > EMAC30 AND EMAC5 > EMAC30 AND EMAC7 > EMAC30 AND EMAC10 > EMAC30 AND EMAC12 > EMAC30 AND EMAC15 > EMAC30 AND EMAC3 > EMAC35 AND EMAC5 > EMAC35 AND EMAC7 > EMAC35 AND EMAC10 > EMAC35 AND EMAC12 > EMAC35 AND EMAC15 > EMAC35 AND EMAC
3 > EMAC40 AND EMAC5 > EMAC40 AND EMAC7 > EMAC40 AND EMAC10 > EMAC40 AND EMAC12 > EMAC40 AND EMAC15 > EMAC40 AND EMAC3 > EMAC45 AND EMAC5 > EMAC45 AND EMAC7 > EMAC45 AND EMAC10 > EMAC45 AND EMAC12 > EMAC45 AND EMAC15 > EMAC45 AND EMAC3 > 
EMAC50 AND EMAC5 > EMAC50 AND EMAC7 > EMAC50 AND EMAC10 > EMAC50 AND EMAC12 > EMAC50 AND EMAC15 > EMAC50 AND EMAC3 > EMAC60 AND EMAC5 > EMAC60 AND EMAC7 > EMAC60 AND EMAC10 > EMAC60 AND EMAC12 > EMAC60 AND EMAC15 > EMAC60;
EOT

guppy2 = <<-EOT
EMAC3 > EMAC30 AND EMAC5 > EMAC30 AND EMAC7 > EMAC30 AND EMAC10 > EMAC30 AND EMAC12 > EMAC30 AND EMAC15 > EMAC30; EMAC3 > EMAC35 AND EMAC5 > EMAC35 AND EMAC7 > EMAC35 AND EMAC10 > EMAC35 AND EMAC12 > EMAC35 AND EMAC15 > EMAC35; EMAC3 > EM
AC40 AND EMAC5 > EMAC40 AND EMAC7 > EMAC40 AND EMAC10 > EMAC40 AND EMAC12 > EMAC40 AND EMAC15 > EMAC40; EMAC3 > EMAC45 AND EMAC5 > EMAC45 AND EMAC7 > EMAC45 AND EMAC10 > EMAC45 AND EMAC12 > EMAC45 AND EMAC15 > EMAC45; EMAC3 > EMAC50 AND E
MAC5 > EMAC50 AND EMAC7 > EMAC50 AND EMAC10 > EMAC50 AND EMAC12 > EMAC50 AND EMAC15 > EMAC50; EMAC3 > EMAC60 AND EMAC5 > EMAC60 AND EMAC7 > EMAC60 AND EMAC10 > EMAC60 AND EMAC12 > EMAC60 AND EMAC15 > EMAC60;
EOT

test425803 = <<-EOT
EMAC3 > EMAC30 AND EMAC5 > EMAC30 AND EMAC7 > EMAC30 AND EMAC10 > EMAC30 AND EMAC12 > EMAC30 AND EMAC15 > EMAC30; EMAC3 > EMAC35 AND EMAC5 > EMAC35 AND EMAC7 > EMAC35 AND EMAC10 > EMAC35 AND EMAC12 > EMAC35 AND EMAC15 > EMAC35; EMAC3 > EM
AC40 AND EMAC5 > EMAC40 AND EMAC7 > EMAC40 AND EMAC10 > EMAC40 AND EMAC12 > EMAC40 AND EMAC15 > EMAC40; EMAC3 > EMAC45 AND EMAC5 > EMAC45 AND EMAC7 > EMAC45 AND EMAC10 > EMAC45 AND EMAC12 > EMAC45 AND EMAC15 > EMAC45; EMAC3 > EMAC50 AND E
MAC5 > EMAC50 AND EMAC7 > EMAC50 AND EMAC10 > EMAC50 AND EMAC12 > EMAC50 AND EMAC15 > EMAC50; EMAC3 > EMAC60 AND EMAC5 > EMAC60 AND EMAC7 > EMAC60 AND EMAC10 > EMAC60 AND EMAC12 > EMAC60 AND EMAC15 > EMAC60;
EOT

test746722 = <<-EOT
EMAC3 > EMAC30 AND EMAC5 > EMAC30 AND EMAC7 > EMAC30 AND EMAC10 > EMAC30 AND EMAC12 > EMAC30 AND EMAC15 > EMAC30 AND EMAC3 > EMAC35 AND EMAC5 > EMAC35 AND EMAC7 > EMAC35 AND EMAC10 > EMAC35 AND EMAC12 > EMAC35 AND EMAC15 > EMAC35 AND EMAC
3 > EMAC40 AND EMAC5 > EMAC40 AND EMAC7 > EMAC40 AND EMAC10 > EMAC40 AND EMAC12 > EMAC40 AND EMAC15 > EMAC40 AND EMAC3 > EMAC45 AND EMAC5 > EMAC45 AND EMAC7 > EMAC45 AND EMAC10 > EMAC45 AND EMAC12 > EMAC45 AND EMAC15 > EMAC45 AND EMAC3 > 
EMAC50 AND EMAC5 > EMAC50 AND EMAC7 > EMAC50 AND EMAC10 > EMAC50 AND EMAC12 > EMAC50 AND EMAC15 > EMAC50 AND EMAC3 > EMAC60 AND EMAC5 > EMAC60 AND EMAC7 > EMAC60 AND EMAC10 > EMAC60 AND EMAC12 > EMAC60 AND EMAC15 > EMAC60;
EOT

HOMEDIR = Dir.pwd
CHECKSUMS = {
	'AAME' => '81bda6f439aa33012c607046902b7065',
	'FNSR' => 'c04895cd46aab0f5ae4311eb2ded196c',
	'SPEX' => 'e8a7c3b2ebfbff8c5424ff7e64f51ad1',
	'PLUG' => '91e47952d3b606e030abac9b7aa0885c',
	'FUEL' => '6b4b5ca229f90c3cb72ea4a54653600b',
	'INGN' => '65cef6280ad0a0c509c5f1b36f4908c7',
	'NAVI' => '29e1c01969483753ca56d5ae32d3a243',
	'TGEN' => '952d9df29dddeddb98ef003324f71331',
	'TRUE' => 'c9aeb39580069416582b92ab8001c961',
	'FISI' => 'cb9856897d6356b1c323c012d749740c',
	'PTC' => '7969882547241ef00cb2355ebe2cf7c0',
	'AIG' => '8cb2107dc624203ca96b0835ac516898',
	'CDE' => 'a351a3b73e758af25643c370d365c867',
	'WMG' => '87487426674e123363279361c98035f7',
	} 

def run_screen(screen, tickers, date)
  Dir.chdir("../cmdline")
  cmdline = "./screen.rb -t #{tickers.join(',')} -d #{date} -c \"#{screen}\""
  output = `#{cmdline}`
  Dir.chdir(HOMEDIR)
  output.split 
end

RSpec.describe "Legacy Suite" do
  before(:each) do
   Dir.chdir(HOMEDIR)
  end

  it "ptab files are free of corruption" do
    CHECKSUMS.each do |t, x|
      md5 = Digest::MD5.hexdigest(File.read("./testdata/#{t}.ptab"))
      expect(md5).to eq(x)
    end
  end

  it "series six tests" do
    hits = run_screen("(((C - C120) / C120) * 100) >= 100; C > AVGC50;", %w(AIG CDE FNSR), "2009-10-01")
    expect(hits).to be_empty

    hits = run_screen("(((C - C120) / C120) * 100) >= 100; C > AVGC50;", %w(SPEX), "2011-05-12")
    expect(hits).to be_empty
  end

  it "guppy moving averages" do
    hits = run_screen(guppy1.gsub("\n", ""), %w(AAME), "2010-09-16")
    expect(hits).to match_array(%w(AAME))

    hits = run_screen(guppy2.gsub("\n", ""), %w(AAME), "2010-09-16")
    expect(hits).to match_array(%w(AAME))   

    hits = run_screen(test425803.gsub("\n", ""), %w(FISI WMG), "2011-02-01")
    expect(hits).to match(%w(FISI WMG))

    hits = run_screen(test746722.gsub("\n", ""), %w(FISI WMG), "2011-02-01")
    expect(hits).to match(%w(FISI WMG))
  end

  it "discards data with gaps in it" do
    hits = run_screen("100 * (C - C250) / C250 >= 400;", %w(PLUG FUEL INGN NAVI PTC TGEN TRUE), "2014-06-25")
    expect(hits).to match(%w(PLUG))
  end
end
